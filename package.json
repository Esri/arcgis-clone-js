{
  "name": "@esri/solution.js",
  "version": "0.18.4",
  "description": "A library running in Node.js and modern browsers for transferring ArcGIS Online items from one organization to another.",
  "devDependencies": {
    "@chiragrupani/karma-chromium-edge-launcher": "^2.0.0",
    "@khanacademy/tota11y": "^0.2.0",
    "@octokit/rest": "^18.0.0",
    "@rollup/plugin-commonjs": "^11.1.0",
    "@rollup/plugin-json": "^4.0.3",
    "@rollup/plugin-node-resolve": "^7.1.3",
    "@semantic-release/commit-analyzer": "^8.0.1",
    "@types/fetch-mock": "^7.3.2",
    "@types/jasmine": "^3.5.11",
    "@types/node": "^10.17.0",
    "@types/sinon": "^9.0.0",
    "acetate": "^2.0.8",
    "acetate-cli": "^1.0.1",
    "acorn": "^8.0.1",
    "acorn-walk": "^8.0.0",
    "changelog-parser": "^2.7.0",
    "cheerio": "^1.0.0-rc.3",
    "codecov": "^3.6.5",
    "commitizen": "^4.1.2",
    "concurrently": "^5.3.0",
    "core-js": "^3.6.1",
    "coveralls": "^3.1.0",
    "cpx": "^1.5.0",
    "cross-spawn": "^5.1.0",
    "cz-lerna-changelog": "^2.0.2",
    "date-fns": "^1.29.0",
    "es6-promise": "^4.2.8",
    "event-stream": "3.3.4",
    "fetch-mock": "^7.7.3",
    "gh-pages": "^1.1.0",
    "gh-release": "^3.5.0",
    "handlebars": "^4.5.1",
    "husky": "^0.14.3",
    "inspect-process": "^0.5.0",
    "isomorphic-fetch": "^2.2.1",
    "isomorphic-form-data": "^2.0.0",
    "jasmine": "^3.5.0",
    "jasmine-core": "^3.5.0",
    "karma": "^5.0.9",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^2.0.2",
    "karma-firefox-launcher": "^1.1.0",
    "karma-jasmine": "^2.0.1",
    "karma-jasmine-diff-reporter": "^2.0.0",
    "karma-safari-launcher": "^1.0.0",
    "karma-spec-reporter": "0.0.32",
    "karma-typescript": "^5.0.3",
    "karma-typescript-es6-transform": "^4.0.0",
    "lerna": "^3.22.1",
    "lint-staged": "^4.3.0",
    "marked": "^0.7.0",
    "minimatch": "^3.0.4",
    "node-sass": "^4.13.0",
    "onchange": "^6.0.0",
    "prettier": "^1.19.1",
    "resolve": "^1.5.0",
    "rimraf": "^2.6.2",
    "rollup": "^1.26.0",
    "rollup-plugin-commonjs": "^10.1.0",
    "rollup-plugin-filesize": "^6.1.1",
    "rollup-plugin-json": "^4.0.0",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-terser": "^4.0.4",
    "rollup-plugin-typescript2": "^0.25.3",
    "rollup-plugin-uglify": "^3.0.0",
    "semantic-release": "^17.1.1",
    "shelljs": "^0.7.8",
    "sinon": "^9.0.2",
    "slug": "^0.9.1",
    "sri-toolbox": "0.2.0",
    "ts-node": "^8.3.0",
    "tslint": "^5.16.0",
    "tslint-config-prettier": "^1.6.0",
    "tslint-config-standard": "^8.0.1",
    "typedoc": "^0.15.0",
    "typescript": "^3.9.7",
    "uuid": "^8.0.0"
  },
  "dependencies": {
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-globals": "^1.4.0",
    "tslib": "^1.13.0"
  },
  "lint-staged": {
    "packages/**/*.ts": [
      "prettier --write --parser typescript --tab-width 2 --use-tabs false",
      "tslint --project tsconfig.json",
      "git add"
    ]
  },
  "scripts": {
    "start:deployer": "lerna run build && http-server ./demos/deploySolution",
    "build": "lerna run build",
    "build:umd": "lerna run build:umd",
    "clean": "npm run clean:src && npm run clean:dist",
    "clean:src": "rm -rf packages/*/{src,test}/*.{d.ts,js,js.map} && rm -rf packages/*/{src,test}/**/*.{d.ts,js,js.map}",
    "clean:dist": "rm -rf packages/*/dist/ && rm -rf packages/*/.rpt2_cache",
    "deepclean": "rm -rf ./node_modules && rm -rf packages/*/node_modules && npm run clean",
    "lint": "tslint --project tsconfig.json --exclude '**/*.d.ts demos/**/*'",
    "lint:fix": "tslint --project tsconfig.json --exclude '**/*.d.ts' --fix",
    "prettify": "prettier --write --parser typescript --tab-width 2 --use-tabs false \"packages/**/+(src|test)/**/*.ts\"",
    "dev": "support/dev.sh",
    "test": "npm run lint && npm run test:node && npm run test:chrome",
    "test:browsers": "karma start --single-run --browsers Chrome,Firefox,Edge",
    "test:chrome": "karma start --single-run --browsers=Chrome",
    "test:chrome:ci": "karma start --single-run --browsers ChromeHeadlessCI karma.conf.js",
    "test:chrome:debug": "karma start --auto-watch --no-single-run --browsers=Chrome",
    "test:edge": "karma start --single-run --browsers=Edge",
    "test:firefox": "karma start --single-run --browsers=Firefox",
    "test:node": "jasmine --config=jasmine.json",
    "test:node:debug": "inspect jasmine --config=jasmine.json",
    "test:ci": "npm run lint && npm run test:node && npm run test:chrome:ci && npm run test:firefox && npm run coveralls",
    "test:ci:win": "npm run lint && npm run test:node && npm run test:chrome:ci && npm run test:firefox && npm run coveralls:win",
    "test:all": "npm run test:node && npm run test:chrome",
    "test:coverage": "npm run test:chrome:ci && npm run coveralls",
    "test:coverage:win": "npm run test:chrome:ci && npm run coveralls:win",
    "coveralls": "cat coverage/lcov/lcov.info | node node_modules/coveralls/bin/coveralls",
    "coveralls:win": "start cmd.exe /c \"type coverage\\lcov\\lcov.info | node node_modules/coveralls/bin/coveralls.js\"",
    "docs:build": "rimraf docs/build && npm run docs:typedoc && npm run docs:build:acetate && npm run docs:build:sass && npm run docs:build:images && npm run docs:build:js",
    "docs:typedoc": "node docs/build-typedoc.js",
    "docs:build:acetate": "ENV=prod acetate build --config docs/acetate.config.js",
    "docs:build:sass": "node-sass --output docs/build/solution.js/css --source-map true --source-map-contents docs/src/sass",
    "docs:build:images": "cpx \"docs/src/**/*.{png,jpg,jpeg,gif,svg,webm,ogg}\" docs/build/solution.js",
    "docs:build:js": "cpx \"docs/src/**/{api-search,nav-toggle}.js\" docs/build/solution.js",
    "docs:build:dev": "rimraf docs/build && npm run docs:dev:typedoc && npm run docs:dev:acetate && npm run docs:dev:sass && npm run docs:dev:images && npm run docs:dev:js",
    "docs:dev:typedoc": "onchange -v 'packages/*/src/**/*.ts' -- npm run docs:typedoc",
    "docs:dev:acetate": "acetate server --log=debug --config docs/acetate.config.js --startPath solution.js/index.html",
    "docs:dev:sass": "node-sass --watch --recursive --output docs/build/solution.js/css --source-map true --source-map-contents docs/src/sass",
    "docs:dev:images": "cpx \"docs/src/**/*.{png,jpg,jpeg,gif,svg,webm,ogg}\" docs/build/solution.js -w",
    "docs:dev:js": "cpx \"docs/src/**/{api-search,nav-toggle}.js\" docs/build/solution.js -w",
    "docs:serve": "rimraf docs/build && npm run docs:build && concurrently \"npm run docs:dev:js\" \"npm run docs:dev:images\" \"npm run docs:dev:acetate\" \"npm run docs:dev:sass\" \"npm run docs:dev:typedoc\"",
    "docs:deploy": "npm run docs:build && node support/deploy-doc-site.js",
    "docs:srihash": "node docs/generate-srihashes.js",
    "prerelease:prepare": "git fetch --all && npm run clean && lerna bootstrap && npm run clean:src && npm test",
    "release:prepare": "lerna publish --no-git-tag-version --no-push --skip-npm --yes && node ./support/changelog.js",
    "release:review": "git --no-pager diff --word-diff",
    "release:publish": "bash ./support/publish.sh",
    "release:publish-retry": "lerna publish from-package --no-git-tag-version --no-push --yes",
    "postinstall": "npm run bootstrap",
    "bootstrap": "lerna bootstrap",
    "precommit": "lint-staged",
    "y:link:hub": "lerna run y:link:hub",
    "y:unlink:hub": "lerna run y:unlink:hub && npm install"
  },
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Esri/solution.js.git"
  },
  "contributors": [
    {
      "name": "Mike Tschudi",
      "email": "mtschudi@esri.com"
    },
    {
      "name": "Chris Fox",
      "email": "cfox@esri.com"
    },
    {
      "name": "John Hauck",
      "email": "jhauck@esri.com"
    },
    {
      "name": "Dave Bouwman",
      "email": "dbouwman@esri.com"
    },
    {
      "name": "John Gravois"
    }
  ],
  "author": "Esri",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/Esri/solution.js/issues"
  },
  "homepage": "https://github.com/Esri/solution.js#readme",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-lerna-changelog"
    }
  }
}
